{
  "_from": "js-sha3",
  "_id": "js-sha3@0.7.0",
  "_inBundle": false,
  "_integrity": "sha512-Wpks3yBDm0UcL5qlVhwW9Jr9n9i4FfeWBFOOXP5puDS/SiudJGhw7DPyBqn3487qD4F0lsC0q3zxink37f7zeA==",
  "_location": "/js-sha3",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "js-sha3",
    "fetchSpec": "latest",
    "name": "js-sha3",
    "raw": "js-sha3",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.7.0.tgz",
  "_shasum": "0a5c57b36f79882573b2d84051f8bb85dd1bd63a",
  "_shrinkwrap": null,
  "_spec": "js-sha3",
  "_where": "/home/nour/Documents/Lamarkaz/Dcourt",
  "author": {
    "email": "emn178@gmail.com",
    "name": "Chen, Yi-Cyuan"
  },
  "bugs": {
    "url": "https://github.com/emn178/js-sha3/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "A simple SHA-3 / Keccak / Shake hash function for JavaScript supports UTF-8 encoding.",
  "devDependencies": {
    "expect.js": "~0.3.1",
    "mocha": "~2.3.4",
    "nyc": "^11.3.0",
    "uglify-js": "^3.1.9",
    "webworker-threads": "^0.7.13"
  },
  "homepage": "https://github.com/emn178/js-sha3",
  "keywords": [
    "HMAC",
    "cryptography",
    "cshake",
    "encryption",
    "hash",
    "keccak",
    "kmac",
    "sha3",
    "shake"
  ],
  "license": "MIT",
  "main": "src/sha3.js",
  "name": "js-sha3",
  "nyc": {
    "exclude": [
      "tests"
    ]
  },
  "optionalDependencies": {},
  "readme": "# js-sha3\n\n[![Build Status](https://travis-ci.org/emn178/js-sha3.svg?branch=master)](https://travis-ci.org/emn178/js-sha3)\n[![Coverage Status](https://coveralls.io/repos/emn178/js-sha3/badge.svg?branch=master)](https://coveralls.io/r/emn178/js-sha3?branch=master)  \n[![NPM](https://nodei.co/npm/js-sha3.png?stars&downloads)](https://nodei.co/npm/js-sha3/)\n\nA simple SHA-3 / Keccak / Shake hash function for JavaScript supports UTF-8 encoding.\n\n## Notice\n* Sha3 methods has been renamed to keccak since v0.2.0. It means that sha3 methods of v0.1.x are equal to keccak methods of v0.2.x and later.\n* `buffer` method is deprecated. This maybe confuse with Buffer in node.js. Please use `arrayBuffer` instead.\n\n## Demo\n[SHA3-512 Online](http://emn178.github.io/online-tools/sha3_512.html)  \n[SHA3-384 Online](http://emn178.github.io/online-tools/sha3_384.html)  \n[SHA3-256 Online](http://emn178.github.io/online-tools/sha3_256.html)  \n[SHA3-224 Online](http://emn178.github.io/online-tools/sha3_224.html)  \n[Keccak-512 Online](http://emn178.github.io/online-tools/keccak_512.html)  \n[Keccak-384 Online](http://emn178.github.io/online-tools/keccak_384.html)  \n[Keccak-256 Online](http://emn178.github.io/online-tools/keccak_256.html)  \n[Keccak-224 Online](http://emn178.github.io/online-tools/keccak_224.html)  \n[Shake128 Online](http://emn178.github.io/online-tools/shake_128.html)  \n[Shake256 Online](http://emn178.github.io/online-tools/shake_256.html)  \n\n## Download\n[Compress](https://raw.github.com/emn178/js-sha3/master/build/sha3.min.js)  \n[Uncompress](https://raw.github.com/emn178/js-sha3/master/src/sha3.js)\n\n## Installation\nYou can also install js-sha3 by using Bower.\n\n    bower install js-sha3\n\nFor node.js, you can use this command to install:\n\n    npm install js-sha3\n\n## Usage\nYou could use like this:\n```JavaScript\nsha3_512('Message to hash');\nsha3_384('Message to hash');\nsha3_256('Message to hash');\nsha3_224('Message to hash');\nkeccak512('Message to hash');\nkeccak384('Message to hash');\nkeccak256('Message to hash');\nkeccak224('Message to hash');\nshake128('Message to hash', 256);\nshake256('Message to hash', 512);\ncshake128('Message to hash', 256, 'function name', 'customization');\ncshake256('Message to hash', 512, 'function name', 'customization');\nkmac128('key', 'Message to hash', 256, 'customization');\nkmac256('key', 'Message to hash', 512, 'customization');\n\n// Support ArrayBuffer output\nvar buffer = keccak224.buffer('Message to hash');\n\n// Support Array output\nvar buffer = keccak224.array('Message to hash');\n\n// update hash\nsha3_512.update('Message ').update('to ').update('hash').hex();\n// specify shake output bits at first update\nshake128.update('Message ', 256).update('to ').update('hash').hex();\n\n// or to use create\nvar hash = sha3_512.create();\nhash.update('...');\nhash.update('...');\nhash.hex();\n\n// specify shake output bits when creating\nvar hash = shake128.create(256);\nhash.update('...');\nhash.update('...');\nhash.hex();\n\n// specify cshake output bits, function name and customization when creating\nvar hash = cshake128.create(256, 'function name', 'customization');\n\n// specify kmac key, output bits and customization when creating\nvar hash = kmac128.create('key', 256, 'customization');\n```\nIf you use node.js, you should require the module first:\n```JavaScript\nsha3_512 = require('js-sha3').sha3_512;\nsha3_384 = require('js-sha3').sha3_384;\nsha3_256 = require('js-sha3').sha3_256;\nsha3_224 = require('js-sha3').sha3_224;\nkeccak512 = require('js-sha3').keccak512;\nkeccak384 = require('js-sha3').keccak384;\nkeccak256 = require('js-sha3').keccak256;\nkeccak224 = require('js-sha3').keccak224;\nshake128 = require('js-sha3').shake128;\nshake256 = require('js-sha3').shake256;\ncshake128 = require('js-sha3').cshake128;\ncshake256 = require('js-sha3').cshake256;\nkmac128 = require('js-sha3').kmac128;\nkmac256 = require('js-sha3').kmac256;\n```\nIf you use TypeScript, you can import like this:\n```TypeScript\nimport { sha3_512 } from 'js-sha3';\n```\n\n## Example\nCode\n```JavaScript\nsha3_512('');\n// a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26\n\nsha3_512('The quick brown fox jumps over the lazy dog');\n// 01dedd5de4ef14642445ba5f5b97c15e47b9ad931326e4b0727cd94cefc44fff23f07bf543139939b49128caf436dc1bdee54fcb24023a08d9403f9b4bf0d450\n\nsha3_512('The quick brown fox jumps over the lazy dog.');\n// 18f4f4bd419603f95538837003d9d254c26c23765565162247483f65c50303597bc9ce4d289f21d1c2f1f458828e33dc442100331b35e7eb031b5d38ba6460f8\n\nsha3_384('');\n// 0c63a75b845e4f7d01107d852e4c2485c51a50aaaa94fc61995e71bbee983a2ac3713831264adb47fb6bd1e058d5f004\n\nsha3_384('The quick brown fox jumps over the lazy dog');\n// 7063465e08a93bce31cd89d2e3ca8f602498696e253592ed26f07bf7e703cf328581e1471a7ba7ab119b1a9ebdf8be41\n\nsha3_384('The quick brown fox jumps over the lazy dog.');\n// 1a34d81695b622df178bc74df7124fe12fac0f64ba5250b78b99c1273d4b080168e10652894ecad5f1f4d5b965437fb9\n\nsha3_256('');\n// a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a\n\nsha3_256('The quick brown fox jumps over the lazy dog');\n// 69070dda01975c8c120c3aada1b282394e7f032fa9cf32f4cb2259a0897dfc04\n\nsha3_256('The quick brown fox jumps over the lazy dog.');\n// a80f839cd4f83f6c3dafc87feae470045e4eb0d366397d5c6ce34ba1739f734d\n\nsha3_224('');\n// 6b4e03423667dbb73b6e15454f0eb1abd4597f9a1b078e3f5b5a6bc7\n\nsha3_224('The quick brown fox jumps over the lazy dog');\n// d15dadceaa4d5d7bb3b48f446421d542e08ad8887305e28d58335795\n\nsha3_224('The quick brown fox jumps over the lazy dog.');\n// 2d0708903833afabdd232a20201176e8b58c5be8a6fe74265ac54db0\n\nkeccak512('');\n// 0eab42de4c3ceb9235fc91acffe746b29c29a8c366b7c60e4e67c466f36a4304c00fa9caf9d87976ba469bcbe06713b435f091ef2769fb160cdab33d3670680e\n\nkeccak512('The quick brown fox jumps over the lazy dog');\n// d135bb84d0439dbac432247ee573a23ea7d3c9deb2a968eb31d47c4fb45f1ef4422d6c531b5b9bd6f449ebcc449ea94d0a8f05f62130fda612da53c79659f609\n\nkeccak512('The quick brown fox jumps over the lazy dog.');\n// ab7192d2b11f51c7dd744e7b3441febf397ca07bf812cceae122ca4ded6387889064f8db9230f173f6d1ab6e24b6e50f065b039f799f5592360a6558eb52d760\n\nkeccak384('');\n// 2c23146a63a29acf99e73b88f8c24eaa7dc60aa771780ccc006afbfa8fe2479b2dd2b21362337441ac12b515911957ff\n\nkeccak384('The quick brown fox jumps over the lazy dog');\n// 283990fa9d5fb731d786c5bbee94ea4db4910f18c62c03d173fc0a5e494422e8a0b3da7574dae7fa0baf005e504063b3\n\nkeccak384('The quick brown fox jumps over the lazy dog.');\n// 9ad8e17325408eddb6edee6147f13856ad819bb7532668b605a24a2d958f88bd5c169e56dc4b2f89ffd325f6006d820b\n\nkeccak256('');\n// c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n\nkeccak256('The quick brown fox jumps over the lazy dog');\n// 4d741b6f1eb29cb2a9b9911c82f56fa8d73b04959d3d9d222895df6c0b28aa15\n\nkeccak256('The quick brown fox jumps over the lazy dog.');\n// 578951e24efd62a3d63a86f7cd19aaa53c898fe287d2552133220370240b572d\n\nkeccak224('');\n// f71837502ba8e10837bdd8d365adb85591895602fc552b48b7390abd\n\nkeccak224('The quick brown fox jumps over the lazy dog');\n// 310aee6b30c47350576ac2873fa89fd190cdc488442f3ef654cf23fe\n\nkeccak224('The quick brown fox jumps over the lazy dog.');\n// c59d4eaeac728671c635ff645014e2afa935bebffdb5fbd207ffdeab\n\nshake128('', 256);\n// 7f9c2ba4e88f827d616045507605853ed73b8093f6efbc88eb1a6eacfa66ef26\n\nshake256('', 512);\n// 46b9dd2b0ba88d13233b3feb743eeb243fcd52ea62b81b82b50c27646ed5762fd75dc4ddd8c0f200cb05019d67b592f6fc821c49479ab48640292eacb3b7c4be\n```\nIt also supports UTF-8 encoding:\n\nCode\n```JavaScript\nsha3_512('中文');\n// 059bbe2efc50cc30e4d8ec5a96be697e2108fcbf9193e1296192eddabc13b143c0120d059399a13d0d42651efe23a6c1ce2d1efb576c5b207fa2516050505af7\n\nsha3_384('中文');\n// 9fb5b99e3c546f2738dcd50a14e9aef9c313800c1bf8cf76bc9b2c3a23307841364c5a2d0794702662c5796fb72f5432\n\nsha3_256('中文');\n// ac5305da3d18be1aed44aa7c70ea548da243a59a5fd546f489348fd5718fb1a0\n\nsha3_224('中文');\n// 106d169e10b61c2a2a05554d3e631ec94467f8316640f29545d163ee\n\nkeccak512('中文');\n// 2f6a1bd50562230229af34b0ccf46b8754b89d23ae2c5bf7840b4acfcef86f87395edc0a00b2bfef53bafebe3b79de2e3e01cbd8169ddbb08bde888dcc893524\n\nkeccak384('中文');\n// 743f64bb7544c6ed923be4741b738dde18b7cee384a3a09c4e01acaaac9f19222cdee137702bd3aa05dc198373d87d6c\n\nkeccak256('中文');\n// 70a2b6579047f0a977fcb5e9120a4e07067bea9abb6916fbc2d13ffb9a4e4eee\n\nkeccak224('中文');\n// f71837502ba8e10837bdd8d365adb85591895602fc552b48b7390abd\n```\n\nIt also supports byte `Array`, `Uint8Array`, `ArrayBuffer` input:\n\nCode\n```JavaScript\nsha3_512([]);\n// a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26\n\nsha3_512(new Uint8Array([]));\n// a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26\n\n// ...\n```\n\n## Benchmark\n[UTF8](http://jsperf.com/sha3/5)  \n[ASCII](http://jsperf.com/sha3/4)\n\n## License\nThe project is released under the [MIT license](http://www.opensource.org/licenses/MIT).\n\n## Contact\nThe project's website is located at https://github.com/emn178/js-sha3  \nAuthor: Chen, Yi-Cyuan (emn178@gmail.com)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/emn178/js-sha3.git"
  },
  "scripts": {
    "build": "uglifyjs src/sha3.js -c -m --comments --output build/sha3.min.js",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "report": "nyc --reporter=html --reporter=text mocha tests/node-test.js",
    "test": "nyc mocha tests/node-test.js"
  },
  "version": "0.7.0"
}
